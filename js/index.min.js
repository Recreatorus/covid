function status(t) {
  return t.status >= 200 && t.status < 300 ? Promise.resolve(t) : Promise.reject(new Error(t.statusText));
}
function json(t) {
  return t.json();
}
function displayData(t) {
  var e = t.countries_stat
    .map(function (t) {
      return Number(t.cases.replace(/,/g, ''));
    })
    .reduce(function (t, e) {
      return e + t;
    });
  document.querySelector('.total-cases').textContent = e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
  var n = t.countries_stat
    .map(function (t) {
      return Number(t.deaths.replace(/,/g, ''));
    })
    .reduce(function (t, e) {
      return e + t;
    });
  document.querySelector('.total-deaths').textContent = n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
  var r = t.countries_stat
    .map(function (t) {
      return Number(t.new_cases.replace(/,/g, ''));
    })
    .reduce(function (t, e) {
      return e + t;
    });
  document.querySelector('.cases-day').textContent = r.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
  var c = t.countries_stat
    .map(function (t) {
      return Number(t.new_deaths.replace(/,/g, ''));
    })
    .reduce(function (t, e) {
      return e + t;
    });
  (document.querySelector('.deaths-day').textContent = c.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ')),
    (document.querySelector('.day-update').textContent = t.statistic_taken_at);
  const o = document.querySelector('#sortMe tbody');
  t.countries_stat.forEach((t, e) =>
    o.insertAdjacentHTML(
      'beforeend',
      `\n        <tr>\n          <td width="5%">${e + 1}</td>\n          <td width="25%">${
        t.country_name
      }</td>\n          <td width="10%">${t.cases.replace(
        /,/g,
        ''
      )}</td>\n          <td width="10%">${t.new_cases.replace(
        /,/g,
        ''
      )}</td>\n          <td width="10%">${t.deaths.replace(/,/g, '')}</td>\n          <td width="10%">${(
        (t.deaths.replace(/[\s.,%]/g, '') / n) *
        100
      ).toFixed(2)}</td>\n          <td width="10%">${t.new_deaths.replace(
        /,/g,
        ''
      )}</td>\n          <td width="10%">${t.deaths_per_1m_population.replace(
        /,/g,
        ''
      )}</td>\n          <td width="10%">${t.tests_per_1m_population.replace(/,/g, '')}</td>\n        </tr>\n      `
    )
  ),
    sortTable();
}
function sortTable() {
  const t = document.getElementById('sortMe'),
    e = t.querySelectorAll('th'),
    n = t.querySelector('tbody'),
    r = n.querySelectorAll('tr'),
    c = Array.from(e).map(function (t) {
      return '';
    }),
    o = function (t, n) {
      const r = e[t].getAttribute('data-type');
      switch (r) {
        case 'number':
          return parseFloat(n);
        case 'string':
        default:
          return n;
      }
    },
    a = function (t) {
      const e = c[t] || 'asc',
        a = 'asc' === e ? 1 : -1,
        s = Array.from(r);
      s.sort(function (e, n) {
        const r = e.querySelectorAll('td')[t].innerHTML,
          c = n.querySelectorAll('td')[t].innerHTML,
          s = o(t, r),
          u = o(t, c);
        switch (!0) {
          case s > u:
            return 1 * a;
          case s < u:
            return -1 * a;
          case s === u:
            return 0;
        }
      }),
        [].forEach.call(r, function (t) {
          n.removeChild(t);
        }),
        (c[t] = 'asc' === e ? 'desc' : 'asc'),
        s.forEach(function (t) {
          n.appendChild(t);
        });
    };
  [].forEach.call(e, function (t, e) {
    t.addEventListener('click', function () {
      a(e);
    });
  });
}
function myFunction() {
  window.pageYOffset > sticky ? header.classList.add('sticky') : header.classList.remove('sticky');
}
const url =
  'https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php?rapidapi-key=7ab5bc98e5msh2a02aa319f5d355p1f98bdjsn76fd281af303';
fetch(url)
  .then(status)
  .then(json)
  .then(function (t) {
    displayData(t);
  })
  .catch(function (t) {
    console.log('%c Ошибка:  ' + t + ' ', 'background-color: #f00; color: #fff', t);
  });
var els = document.querySelectorAll('#sortMe th');
[].forEach.call(els, function (t) {
  t.addEventListener('click', function () {
    [].forEach.call(els, function (t) {
      t.classList.remove('active');
    }),
      t.classList.add('active');
  });
}),
  (window.onscroll = function () {
    myFunction();
  });
var header = document.querySelector('.thead'),
  sticky = header.offsetTop;
